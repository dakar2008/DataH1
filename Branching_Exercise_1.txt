**** FIL STRUKTUR ****
Vi ønsker så vidt som muligt at beholde filstrukturen som er i de enkelte projekt typer.
Alt logisk kode skal ligge i en fil i projektet. Dette er den mest almindelige måde at arbejde med.

**** ÈT ELLER FLERE REPOS ****
Vi ønsker at bruge ét repo til hvert projekt.
Dette er den mest almindelige måde at arbejde med.

**** ADGANGSKONTROL ****
Vi ønsker at bruge adgangskontrol for at sikre at koden ikke kan ændres uden at vi har en god grund.
Dette er den mest almindelige måde at arbejde med.

**** STRUKTUR I FILER - NAVNGIVNING AF FILER ****
Navngivning af filer skal være enkle og tydelige.
Det er vigtigt at filnavnet ikke er forstyrrende eller forvirrende.
Filnavne skal være på engelsk.

**** STRUKTUR I FILER - KOMMENTAR I KODE ****
Kommentar i kode skal som udgangspunkt undgås, koden skal kunne forklare sig selv.

**** STRUKTUR I FILER - NAVNGIVNING AF VARIABLER OG METODER ****
Navngivning af variabler og metoder skal være enkle og tydelige.
Det er vigtigt at variablen ikke er forstyrrende eller forvirrende.
Variablen skal være på engelsk.
Metoden skal være på engelsk.

**** HVAD SKAL DER BESKRIVES I COMMIT BESKEDER ****
Commit beskeder skal beskrive hvad der er gjort.
Commit beskeder skal være på engelsk.

**** HVAD ER GRUNDEN TIL AT VI VIL BRANCHE ****
Grunden til at vi vil branche er at vi ønsker at arbejde på en kodeversion, som er en del af en samling af kodeversioner.
Og samtidig at kunne teste nye features eller bug fixes. Inden vi benytter den i master.

**** HVORDAN VIL VI LAVE CODE REVIEW ****
Code review er en måde at se på kode, og se om det er korrekt.
Vi vil sætte os sammen og gennemgå koden for at se om den overholder vores krav.